package com.RBC.foodnearyou;

import java.io.InputStream;

import org.scribe.builder.ServiceBuilder;
import org.scribe.model.OAuthRequest;
import org.scribe.model.Response;
import org.scribe.model.Token;
import org.scribe.model.Verb;
import org.scribe.oauth.OAuthService;

import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.os.AsyncTask;
import android.util.Log;
import android.widget.ImageView;


/*public class Yelp {

  OAuthService service;
  Token accessToken;


  public Yelp(String consumerKey, String consumerSecret, String token, String tokenSecret) {
    this.service = new ServiceBuilder().provider(YelpApi2.class).apiKey(consumerKey).apiSecret(consumerSecret).build();
    this.accessToken = new Token(token, tokenSecret);
  }


  public String search(String term, double latitude, double longitude) {
    OAuthRequest request = new OAuthRequest(Verb.GET, "https://api.yelp.com/v2/search");
    request.addQuerystringParameter("term", term);
    request.addQuerystringParameter("ll", latitude + "," + longitude);
    this.service.signRequest(this.accessToken, request);
    Response response = request.send();
    return response.getBody();
  }

}*/

public class Yelp extends AsyncTask<String, Void , String> {

	  OAuthService service;
	  Token accessToken;
	  String Term;

	  public Yelp(String term,String consumerKey, String consumerSecret, String token, String tokenSecret) {
	    this.service = new ServiceBuilder().provider(YelpApi2.class).apiKey(consumerKey).apiSecret(consumerSecret).build();
	    this.accessToken = new Token(token, tokenSecret);
	    this.Term = term;
	  }
	  
	  protected String doInBackground(String... urls) {
		  
		  OAuthRequest request = new OAuthRequest(Verb.GET, "https://api.yelp.com/v2/search");
		    request.addQuerystringParameter("term", urls[0]);
		    request.addQuerystringParameter("ll", 30.361471 + "," + -87.164326);
		    this.service.signRequest(this.accessToken, request);
		    Response response = request.send();
		    return response.getBody();
	  }

	  public String search(String term, double latitude, double longitude) {
	    OAuthRequest request = new OAuthRequest(Verb.GET, "https://api.yelp.com/v2/search");
	    request.addQuerystringParameter("term", term);
	    request.addQuerystringParameter("ll", latitude + "," + longitude);
	    this.service.signRequest(this.accessToken, request);
	    Response response = request.send();
	    return response.getBody();
	  }

	}

/* public void FindYelp(String SearchKeyword){
	YelpAPI.YelpAPICLI yelpApiCli = new YelpAPI.YelpAPICLI();
	new JCommander(yelpApiCli);
	YelpAPI yelpApi = new YelpAPI(CONSUMER_KEY, CONSUMER_SECRET, TOKEN, TOKEN_SECRET);
	try {
    YelpAPI.queryAPI(yelpApi, yelpApiCli);
	} catch (JSONException e) {
    e.printStackTrace();
	}

new HttpRequestTask().execute();*/
//setUp();
/*  }
public void setUp() {

YelpAPIFactory yelpAPIFactory = new YelpAPIFactory(
        Credential.consumerKey(),
        Credential.consumerSecret(),
        Credential.token(),
        Credential.tokenSecret()

);

yelpAPIFactory = AsyncTestUtils.setToRunInMainThread(yelpAPIFactory);
yelpAPI = yelpAPIFactory.createAPI();
}
public void testSearchByLocationWithOptionalCoordinate() throws IOException {
Map<String, String> params = new HashMap<>();
params.put("term", "yelp");
params.put("cll", "37.7867703362929,-122.399958372115");

Call<SearchResponse> call = yelpAPI.search("Toronto", params);
Response<SearchResponse> response = call.execute();
Assert.assertEquals(200, response.code());

SearchResponse searchResponse = response.body();
Assert.assertNotNull(searchResponse);
}


private class HttpRequestTask extends AsyncTask<Void, Void, Restuatant> {
@Override
protected Restuatant doInBackground(Void... params) {
    try {
        final String url = "https://api.yelp.com/v2/search?term=food";
        RestTemplate restTemplate = new RestTemplate();
        restTemplate.getMessageConverters().add(new MappingJackson2HttpMessageConverter());
        Restuatant greeting = restTemplate.getForObject(url, Restuatant.class);
        return greeting;
    } catch (Exception e) {
        Log.e("MainActivity", e.getMessage(), e);
    }

    return null;
}
@Override
protected void onPostExecute(Restuatant resturant) {
    TextView greetingIdText = (TextView) findViewById(R.id.Name);
    TextView greetingContentText = (TextView) findViewById(R.id.Address);
    greetingIdText.setText(resturant.getName());
    greetingContentText.setText(resturant.getAddres());
}

}

*/
